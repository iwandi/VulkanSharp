/* Please note that this file is generated by the VulkanSharp's generator. Do not edit directly.

   Licensed under the MIT license.

   Copyright 2016 Xamarin Inc

   This notice may not be removed from any source distribution.
   See LICENSE file for licensing details.
*/

using System;
using System.Runtime.InteropServices;
using Vulkan.Interop;

namespace Vulkan.Linux.Interop
{
	internal static class NativeMethods
	{
		const string VulkanLibrary = "vulkan";

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Result vkCreateMirSurfaceKHR (IntPtr instance, MirSurfaceCreateInfoKhr* pCreateInfo, Vulkan.Interop.AllocationCallbacks* pAllocator, UInt64* pSurface);

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Bool32 vkGetPhysicalDeviceMirPresentationSupportKHR (IntPtr physicalDevice, UInt32 queueFamilyIndex, MirConnection* connection);

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Result vkCreateWaylandSurfaceKHR (IntPtr instance, WaylandSurfaceCreateInfoKhr* pCreateInfo, Vulkan.Interop.AllocationCallbacks* pAllocator, UInt64* pSurface);

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Bool32 vkGetPhysicalDeviceWaylandPresentationSupportKHR (IntPtr physicalDevice, UInt32 queueFamilyIndex, wl_display* display);

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Result vkCreateXlibSurfaceKHR (IntPtr instance, XlibSurfaceCreateInfoKhr* pCreateInfo, Vulkan.Interop.AllocationCallbacks* pAllocator, UInt64* pSurface);

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Bool32 vkGetPhysicalDeviceXlibPresentationSupportKHR (IntPtr physicalDevice, UInt32 queueFamilyIndex, Display* dpy, VisualID visualID);

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Result vkCreateXcbSurfaceKHR (IntPtr instance, XcbSurfaceCreateInfoKhr* pCreateInfo, Vulkan.Interop.AllocationCallbacks* pAllocator, UInt64* pSurface);

		[DllImport (VulkanLibrary, CallingConvention = CallingConvention.Winapi)]
		internal static unsafe extern Bool32 vkGetPhysicalDeviceXcbPresentationSupportKHR (IntPtr physicalDevice, UInt32 queueFamilyIndex, IntPtr* connection, Int32 visual_id);

	}
}
