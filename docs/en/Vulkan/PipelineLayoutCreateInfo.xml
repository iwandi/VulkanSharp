<?xml version="1.0" encoding="utf-8"?>
<Type Name="PipelineLayoutCreateInfo" FullName="Vulkan.PipelineLayoutCreateInfo">
  <TypeSignature Language="C#" Value="public class PipelineLayoutCreateInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipelineLayoutCreateInfo extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Vulkan</AssemblyName>
    <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
    <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
    <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
    <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
    <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Structure specifying the parameters of a newly created pipeline layout object</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelineLayoutCreateInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public uint Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is reserved for future use.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PushConstantRangeCount">
      <MemberSignature Language="C#" Value="public uint PushConstantRangeCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 PushConstantRangeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is the number of push constant ranges included in the pipeline layout.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PushConstantRanges">
      <MemberSignature Language="C#" Value="public Vulkan.PushConstantRange PushConstantRanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Vulkan.PushConstantRange PushConstantRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Vulkan.PushConstantRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is a pointer to an array of sname:VkPushConstantRange structures defining a set of push constant ranges for use in a single pipeline layout. In addition to descriptor set layouts, a pipeline layout also describes how many push constants can: be accessed by each stage of the pipeline. + [NOTE] .Note ==== Push constants represent a high speed path to modify constant data in pipelines that is expected to outperform memory-backed resource updates. ====</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLayoutCount">
      <MemberSignature Language="C#" Value="public uint SetLayoutCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 SetLayoutCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>must: be less than or equal to sname:VkPhysicalDeviceLimits::pname:maxBoundDescriptorSets * The total number of descriptors of the type ename:VK_DESCRIPTOR_TYPE_SAMPLER and ename:VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER accessible to any given shader stage across all elements of pname:pSetLayouts must: be less than or equal to sname:VkPhysicalDeviceLimits::pname:maxPerStageDescriptorSamplers * The total number of descriptors of the type ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER and ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC accessible to any given shader stage across all elements of pname:pSetLayouts must: be less than or equal to sname:VkPhysicalDeviceLimits::pname:maxPerStageDescriptorUniformBuffers * The total number of descriptors of the type ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER and ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC accessible to any given shader stage across all elements of pname:pSetLayouts must: be less than or equal to sname:VkPhysicalDeviceLimits::pname:maxPerStageDescriptorStorageBuffers * The total number of descriptors of the type ename:VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, ename:VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE, and ename:VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER accessible to any given shader stage across all elements of pname:pSetLayouts must: be less than or equal to sname:VkPhysicalDeviceLimits::pname:maxPerStageDescriptorSampledImages * The total number of descriptors of the type ename:VK_DESCRIPTOR_TYPE_STORAGE_IMAGE, and ename:VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER accessible to any given shader stage across all elements of pname:pSetLayouts must: be less than or equal to sname:VkPhysicalDeviceLimits::pname:maxPerStageDescriptorStorageImages * Any two elements of pname:pPushConstantRanges must: not include the same stage in pname:stageFlags ****</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLayouts">
      <MemberSignature Language="C#" Value="public Vulkan.DescriptorSetLayout SetLayouts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Vulkan.DescriptorSetLayout SetLayouts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Vulkan.DescriptorSetLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is a pointer to an array of sname:VkDescriptorSetLayout objects.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>