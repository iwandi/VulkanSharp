<?xml version="1.0" encoding="utf-8"?>
<Type Name="PhysicalDeviceSparseProperties" FullName="Vulkan.PhysicalDeviceSparseProperties">
  <TypeSignature Language="C#" Value="public class PhysicalDeviceSparseProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PhysicalDeviceSparseProperties extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Vulkan</AssemblyName>
    <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
<<<<<<< HEAD
=======
    <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
    <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
    <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
    <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Structure specifying physical device sparse memory properties</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhysicalDeviceSparseProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyAlignedMipSize">
<<<<<<< HEAD
=======
      <MemberSignature Language="C#" Value="public Vulkan.Bool32 ResidencyAlignedMipSize;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Vulkan.Bool32 ResidencyAlignedMipSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Vulkan.Bool32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if images with mip level dimensions that are not integer multiples of the corresponding dimensions of the sparse image block may: be placed in the mip tail. If this property is not reported, only mip levels with dimensions smaller than the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure will be placed in the mip tail. If this property is reported the implementation is allowed to return ename:VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT in the pname:flags member of sname:VkSparseImageFormatProperties, indicating that mip level dimensions that are not integer multiples of the corresponding dimensions of the sparse image block will be placed in the mip tail.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyAlignedMipSize">
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      <MemberSignature Language="C#" Value="public bool ResidencyAlignedMipSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResidencyAlignedMipSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if images with mip level dimensions that are not integer multiples of the corresponding dimensions of the sparse image block may: be placed in the mip tail. If this property is not reported, only mip levels with dimensions smaller than the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure will be placed in the mip tail. If this property is reported the implementation is allowed to return ename:VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT in the pname:flags member of sname:VkSparseImageFormatProperties, indicating that mip level dimensions that are not integer multiples of the corresponding dimensions of the sparse image block will be placed in the mip tail.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyNonResidentStrict">
<<<<<<< HEAD
=======
      <MemberSignature Language="C#" Value="public Vulkan.Bool32 ResidencyNonResidentStrict;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Vulkan.Bool32 ResidencyNonResidentStrict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Vulkan.Bool32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>specifies whether the physical device can: consistently access non-resident regions of a resource. If this property is ename:VK_TRUE, access to non-resident regions of resources will be guaranteed to return values as if the resource were populated with 0; writes to non-resident regions will be discarded.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyNonResidentStrict">
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      <MemberSignature Language="C#" Value="public bool ResidencyNonResidentStrict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResidencyNonResidentStrict" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>specifies whether the physical device can: consistently access non-resident regions of a resource. If this property is ename:VK_TRUE, access to non-resident regions of resources will be guaranteed to return values as if the resource were populated with 0; writes to non-resident regions will be discarded.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyStandard2DBlockShape">
<<<<<<< HEAD
=======
      <MemberSignature Language="C#" Value="public Vulkan.Bool32 ResidencyStandard2DBlockShape;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Vulkan.Bool32 ResidencyStandard2DBlockShape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Vulkan.Bool32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if the physical device will access all single-sample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the &lt;&lt;sparsememory-sparseblockshapessingle,Standard Sparse Image Block Shapes (Single Sample)&gt;&gt; table. If this property is not supported the value returned in the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure for single-sample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyStandard2DBlockShape">
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      <MemberSignature Language="C#" Value="public bool ResidencyStandard2DBlockShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResidencyStandard2DBlockShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if the physical device will access all single-sample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the &lt;&lt;sparsememory-sparseblockshapessingle,Standard Sparse Image Block Shapes (Single Sample)&gt;&gt; table. If this property is not supported the value returned in the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure for single-sample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyStandard2DMultisampleBlockShape">
<<<<<<< HEAD
=======
      <MemberSignature Language="C#" Value="public Vulkan.Bool32 ResidencyStandard2DMultisampleBlockShape;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Vulkan.Bool32 ResidencyStandard2DMultisampleBlockShape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Vulkan.Bool32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if the physical device will access all multisample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the &lt;&lt;sparsememory-sparseblockshapesmsaa,Standard Sparse Image Block Shapes (MSAA)&gt;&gt; table. If this property is not supported, the value returned in the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure for multisample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyStandard2DMultisampleBlockShape">
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      <MemberSignature Language="C#" Value="public bool ResidencyStandard2DMultisampleBlockShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResidencyStandard2DMultisampleBlockShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if the physical device will access all multisample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the &lt;&lt;sparsememory-sparseblockshapesmsaa,Standard Sparse Image Block Shapes (MSAA)&gt;&gt; table. If this property is not supported, the value returned in the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure for multisample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyStandard3DBlockShape">
<<<<<<< HEAD
=======
      <MemberSignature Language="C#" Value="public Vulkan.Bool32 ResidencyStandard3DBlockShape;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Vulkan.Bool32 ResidencyStandard3DBlockShape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.6105.39043</AssemblyVersion>
        <AssemblyVersion>0.0.6106.39464</AssemblyVersion>
        <AssemblyVersion>0.0.6134.41045</AssemblyVersion>
        <AssemblyVersion>0.0.6142.19338</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Vulkan.Bool32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if the physical device will access all 3D sparse resources using the standard sparse image block shapes (based on image format), as described in the &lt;&lt;sparsememory-sparseblockshapessingle,Standard Sparse Image Block Shapes (Single Sample)&gt;&gt; table. If this property is not supported, the value returned in the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure for 3D images is not required: to match the standard sparse image block dimensions listed in the table.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResidencyStandard3DBlockShape">
>>>>>>> b653ddfa33e628c64586ed15620c3ad18bec190a
      <MemberSignature Language="C#" Value="public bool ResidencyStandard3DBlockShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResidencyStandard3DBlockShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.5950.20892</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>is ename:VK_TRUE if the physical device will access all 3D sparse resources using the standard sparse image block shapes (based on image format), as described in the &lt;&lt;sparsememory-sparseblockshapessingle,Standard Sparse Image Block Shapes (Single Sample)&gt;&gt; table. If this property is not supported, the value returned in the pname:imageGranularity member of the sname:VkSparseImageFormatProperties structure for 3D images is not required: to match the standard sparse image block dimensions listed in the table.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>